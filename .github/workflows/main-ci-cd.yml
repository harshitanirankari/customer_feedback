name: Modern CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run backend tests
        run: |
          if [ -f "pytest.ini" ] || [ -d "tests" ]; then
            pip install pytest
            pytest || true
          else
            echo "No tests found."
          fi

      - name: Build backend Docker image
        run: docker build -t feedback-backend:latest .

      - name: Save backend Docker image
        run: docker save feedback-backend:latest | gzip > feedback-backend.tar.gz

      - name: Upload backend Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-image
          path: backend/feedback-backend.tar.gz

  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        run: |
          if [ -f "package.json" ]; then
            npm test || echo "No tests defined."
          fi

      - name: Build frontend
        run: npm run build

      - name: Build frontend Docker image
        run: docker build -t feedback-frontend:latest .

      - name: Save frontend Docker image
        run: docker save feedback-frontend:latest | gzip > feedback-frontend.tar.gz

      - name: Upload frontend Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-image
          path: frontend/feedback-frontend.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: [backend-build, frontend-build]
    steps:
      - name: Download backend image artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-image
          path: ./backend

      - name: Download frontend image artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-image
          path: ./frontend

      - name: List artifacts
        run: |
          ls -lh ./backend
          ls -lh ./frontend

      # Add your deployment steps here (e.g., push to Docker Hub, deploy to cloud, etc.)
      - name: Deployment placeholder
        run: echo "Add deployment logic here."
